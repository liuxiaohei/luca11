<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ld.mapper.ConfigPropertiesMapper">
  <resultMap id="BaseResultMap" type="org.ld.pojo.ConfigProperties">
    <id column="id" jdbcType="BIGINT" property="id" />
    
    <!-- 配置的key -->
    <result column="key1" jdbcType="VARCHAR" property="key1" />
    
    <!-- 配置的value -->
    <result column="value1" jdbcType="VARCHAR" property="value1" />
    
    <!-- 应用名字 -->
    <result column="application" jdbcType="VARCHAR" property="application" />
    
    <!-- 由client端选择用哪个profile -->
    <result column="profile" jdbcType="VARCHAR" property="profile" />
    
    <!-- 由server端选择哪个lable -->
    <result column="label" jdbcType="VARCHAR" property="label" />
    
    <!-- 是否可编辑 -->
    <result column="editable" jdbcType="BIT" property="editable" />
    
    <!-- 属性描述 -->
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    
    <!-- 属性单位 -->
    <result column="unit" jdbcType="VARCHAR" property="unit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.complex">
                  and
                  <trim prefix="(" prefixOverrides="or" suffix=")">
                    <foreach collection="criterion.subCriteria.criteria" item="citem">
                      <choose>
                        <when test="citem.noValue">
                          or ${citem.condition}
                        </when>
                        <when test="citem.rightValue">
                          or ${citem.beforeValue}#{citem.value}${citem.afterValue} ${citem.condition}
                        </when>
                        <when test="citem.singleValue">
                          or ${citem.condition} ${citem.beforeValue}#{citem.value}${citem.afterValue}
                        </when>
                        <when test="citem.betweenValue">
                          or ${citem.condition} #{citem.value} and #{citem.secondValue}
                        </when>
                        <when test="citem.listValue">
                          or ${citem.condition}
                          <foreach close=")" collection="citem.value" item="listItem" open="(" separator=",">
                            #{listItem}
                          </foreach>
                        </when>
                      </choose>
                    </foreach>
                  </trim>
                </when>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.rightValue">
                  and ${criterion.beforeValue}#{criterion.value}${criterion.afterValue} ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} ${criterion.beforeValue}#{criterion.value}${criterion.afterValue}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.complex">
                  and
                  <trim prefix="(" prefixOverrides="or" suffix=")">
                    <foreach collection="criterion.subCriteria.criteria" item="citem">
                      <choose>
                        <when test="citem.noValue">
                          or ${citem.condition}
                        </when>
                        <when test="citem.rightValue">
                          or ${citem.beforeValue}#{citem.value}${citem.afterValue} ${citem.condition}
                        </when>
                        <when test="citem.singleValue">
                          or ${citem.condition} ${citem.beforeValue}#{citem.value}${citem.afterValue}
                        </when>
                        <when test="citem.betweenValue">
                          or ${citem.condition} #{citem.value} and #{citem.secondValue}
                        </when>
                        <when test="citem.listValue">
                          or ${citem.condition}
                          <foreach close=")" collection="citem.value" item="listItem" open="(" separator=",">
                            #{listItem}
                          </foreach>
                        </when>
                      </choose>
                    </foreach>
                  </trim>
                </when>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.rightValue">
                  and ${criterion.beforeValue}#{criterion.value}${criterion.afterValue} ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} ${criterion.beforeValue}#{criterion.value}${criterion.afterValue}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    config_properties.id, config_properties.key1, config_properties.value1, config_properties.application, config_properties.profile, config_properties.label, config_properties.editable, config_properties.desc, config_properties.unit
  </sql>
  <select id="selectByExample" parameterType="org.ld.pojo.example.ConfigPropertiesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from config_properties
    <if test="from != null">
      <foreach collection="from" item="join" separator=" ">
        ${join}
      </foreach>
    </if>
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from config_properties
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from config_properties
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.ld.pojo.example.ConfigPropertiesExample">
    delete from config_properties
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
    insert into config_properties (key1, value1, application, 
      profile, label, editable, 
      desc, unit)
    values (#{key1,jdbcType=VARCHAR}, #{value1,jdbcType=VARCHAR}, #{application,jdbcType=VARCHAR}, 
      #{profile,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR}, #{editable,jdbcType=BIT}, 
      #{desc,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
    insert into config_properties
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="key1 != null">
        key1,
      </if>
      <if test="value1 != null">
        value1,
      </if>
      <if test="application != null">
        application,
      </if>
      <if test="profile != null">
        profile,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="editable != null">
        editable,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="unit != null">
        unit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="key1 != null">
        #{key1,jdbcType=VARCHAR},
      </if>
      <if test="value1 != null">
        #{value1,jdbcType=VARCHAR},
      </if>
      <if test="application != null">
        #{application,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        #{profile,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="editable != null">
        #{editable,jdbcType=BIT},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ld.pojo.example.ConfigPropertiesExample" resultType="java.lang.Long">
    <choose>
      <when test="distinct">
        select count(distinct config_properties.*) from config_properties
      </when>
      <otherwise>
        select count(*) from config_properties
      </otherwise>
    </choose>
    <if test="from != null">
      <foreach collection="from" item="join" separator=" ">
        ${join}
      </foreach>
    </if>
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update config_properties
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.key1 != null">
        key1 = #{record.key1,jdbcType=VARCHAR},
      </if>
      <if test="record.value1 != null">
        value1 = #{record.value1,jdbcType=VARCHAR},
      </if>
      <if test="record.application != null">
        application = #{record.application,jdbcType=VARCHAR},
      </if>
      <if test="record.profile != null">
        profile = #{record.profile,jdbcType=VARCHAR},
      </if>
      <if test="record.label != null">
        label = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.editable != null">
        editable = #{record.editable,jdbcType=BIT},
      </if>
      <if test="record.desc != null">
        desc = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.updateSql != null" >
        ${record.updateSql},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update config_properties
    set id = #{record.id,jdbcType=BIGINT},
      key1 = #{record.key1,jdbcType=VARCHAR},
      value1 = #{record.value1,jdbcType=VARCHAR},
      application = #{record.application,jdbcType=VARCHAR},
      profile = #{record.profile,jdbcType=VARCHAR},
      label = #{record.label,jdbcType=VARCHAR},
      editable = #{record.editable,jdbcType=BIT},
      desc = #{record.desc,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective">
    update config_properties
    <set>
      <if test="key1 != null">
        key1 = #{key1,jdbcType=VARCHAR},
      </if>
      <if test="value1 != null">
        value1 = #{value1,jdbcType=VARCHAR},
      </if>
      <if test="application != null">
        application = #{application,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        profile = #{profile,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="editable != null">
        editable = #{editable,jdbcType=BIT},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey">
    update config_properties
    set key1 = #{key1,jdbcType=VARCHAR},
      value1 = #{value1,jdbcType=VARCHAR},
      application = #{application,jdbcType=VARCHAR},
      profile = #{profile,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      editable = #{editable,jdbcType=BIT},
      desc = #{desc,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into config_properties  (key1, value1, application, 
        profile, label, editable, 
        desc, unit)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.key1,jdbcType=VARCHAR}, #{item.value1,jdbcType=VARCHAR}, #{item.application,jdbcType=VARCHAR}, 
        #{item.profile,jdbcType=VARCHAR}, #{item.label,jdbcType=VARCHAR}, #{item.editable,jdbcType=BIT}, 
        #{item.desc,jdbcType=VARCHAR}, #{item.unit,jdbcType=VARCHAR})
      </foreach>
    </if>
  </insert>
  <select id="sumByExample" parameterType="org.ld.pojo.example.ConfigPropertiesExample" resultType="long" >
    select sum(${sumCol}) from config_properties
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectOneByExample" parameterType="org.ld.pojo.example.ConfigPropertiesExample" resultMap="BaseResultMap">
    select
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from config_properties
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="upsert" keyColumn="id" keyProperty="id" parameterType="org.ld.pojo.ConfigProperties" useGeneratedKeys="true">
    insert into config_properties
     (id, key1, value1, application, profile, label, editable, desc, unit) 
    values
     (#{id,jdbcType=BIGINT}, #{key1,jdbcType=VARCHAR}, #{value1,jdbcType=VARCHAR}, #{application,jdbcType=VARCHAR}, #{profile,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR}, #{editable,jdbcType=BIT}, #{desc,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}) 
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, key1 = #{key1,jdbcType=VARCHAR}, value1 = #{value1,jdbcType=VARCHAR}, application = #{application,jdbcType=VARCHAR}, profile = #{profile,jdbcType=VARCHAR}, label = #{label,jdbcType=VARCHAR}, editable = #{editable,jdbcType=BIT}, desc = #{desc,jdbcType=VARCHAR}, unit = #{unit,jdbcType=VARCHAR}
  </insert>
  <insert id="upsertSelective" keyColumn="id" keyProperty="id" parameterType="org.ld.pojo.ConfigProperties" useGeneratedKeys="true">
    insert into config_properties
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="key1 != null">
        key1,
      </if>
      <if test="value1 != null">
        value1,
      </if>
      <if test="application != null">
        application,
      </if>
      <if test="profile != null">
        profile,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="editable != null">
        editable,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="unit != null">
        unit,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="key1 != null">
        #{key1,jdbcType=VARCHAR},
      </if>
      <if test="value1 != null">
        #{value1,jdbcType=VARCHAR},
      </if>
      <if test="application != null">
        #{application,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        #{profile,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="editable != null">
        #{editable,jdbcType=BIT},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="key1 != null">
        key1 = #{key1,jdbcType=VARCHAR},
      </if>
      <if test="value1 != null">
        value1 = #{value1,jdbcType=VARCHAR},
      </if>
      <if test="application != null">
        application = #{application,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        profile = #{profile,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="editable != null">
        editable = #{editable,jdbcType=BIT},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
</mapper>